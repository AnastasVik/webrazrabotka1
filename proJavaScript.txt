НемножЕчко за JavaScript:
alert => какой-то текст... а под ним кнопка "Закрыть";
confirm => какой-то текст... а под ним кнопкИ "Да" и "Нет";
prompt: var имяКотороеВводитПользовательВДиалоговомОкне = prompt("какой-то текст" + имяКоторое...Окне);
ПыСы: у prompt'а кнопки "Продолжить" и "Отмена". если нажать "Продолжить", то потом покажет в диалоговом окне "какой-то текст" и значение вышеупомянутой (с ну О-ОЧЕНЬ длинным названием) переменной. Значение даёт пользователь в строке ввода!
Пример кода:
/*begin*/
    var name;
    if(confirm("Ты УВЕРЕН(А) в том, что хочешь здесь оставить своё имя?")) {
        name = prompt("Тогда назови его! (То есть напиши)");
        alert("Дарова, " + name + "! Вот ты и стал(а) одним из 'наших'!.. а теперь сам(а) думай, что значит ВСЯ эта писанина...");
    }
    else {
        alert("Эм... А как мне, в таком случае к тебе обращаться?! Ну, ладно... Закрой тогда окно, а то надует.");
    }
/*End*/
/*---------------------------------------------------------------------*/


/*-***************События в JS**************-*/
Событие "ONCLICK":
Чтобы вызвать метод alert нажатием на кнопку (см. ниже!), на необходимо в файле index.html:
<...>
    <input type="button" name="b" value="Click me!" onclick="названиеФункцииИсполняющейAlert(названиеКнопки, в нашем случае b, но можно и this, но только случае, если мы ссылаемся на тотже input, в к-ром мы пишем этот onclick, к примеру, или какое-либо др. событие!)">
<...>
В файле javascript.js:
<...>
    function названиеФункцииИсполняющейAlert() {
        alert("Текст, который отобразится после НАЖАТИЯ кнопки");
    }
<...>

Событие "ONLOAD":
index.html:
<...>
    <body onload="к примеру, alert('Текст, к-рый отобразится после ЗАГРУЗКИ страницы!')">
        <...>
    </body>
<...>

Событие "ONMOUSEOVER":
index.html:
<body>
    <span onmouseover="названиеФункцииКотораяБудетСчитатьКоличестовоНаведенийНаТекстВтегахSpan(this)">На этот текст было наведено 0 раз</span>
</body>

javascript.js:
var переменная = 0;
function названиеФункцииКотораяБудетСчитатьКоличестовоНаведенийНаТекстВтегахSpan(к примеру, element) {
    переменная++;
    element.innerHTML = "На этот текст было наведено " + counter + " раз";
}

.innerHTML - функция, с помощью к-рой можно записать HTML-код в объект, к к-рому мы ссылаемся!
/*----------------------------------------------------------*/

/*-******************************Form'ы******************************-*/
index.html:
<form action="" method="post" name="test" id="form">
    <label for="name">Имя:</label>
    <input type="text" name="name" placeholder="Имя" id="name">    <br> <br>
    <label for="password">Пароль:</label>
    <input type="password" name="password" placeholder="Пароль" id="password">    <br> <br>
    <label for="RePassword">Проверка пароля:</label>
    <input type="password" name="RePassword" placeholder="Введите пароль" id="RePassword">    <br> <br>
    <span>Пол:</span>
    <input type="radio" name="state" id="male" value="Мужской"> <label for="male">Мужской</label>
    <input type="radio" name="state" id="female" value="Женский"> <label for="female">Женский</label>    <br> <br>
    <input type="button" onclick="valid(document.getElementById('form'))" name="button" value="Готово">
</form>
С помощью document(ссылаемя ко всему документу).getElementById('form') мы ссылаемся на тег "form"!

javascript.js:
function valid(form) {
    var fail_txt = "";
    var fail = false;
    var name = form.name.value;
    var email = form.email.value;
    var password = form.password.value;
    var RePassword = form.RePassword.value;
    var state = form.state.value;
    
    var adr_pattern=/[0-9a-z_-]+@[0-9a-z_-]+\.[a-z]{2,5}/i;
    
    if(name == "" || name == " ") {
        fail_txt = "Вы не ввели своё имя!";
        fail = true;
    }
    else if(email.split('@').length - 1 == false) {
        fail_txt = "Вы ввели свой email НЕ правильно!";
        fail = true;
    }
    else if(password == "") {
        fail_txt = "вы не ввели свой пароль!";
        fail = true;
    }
    else if(adr_pattern.test(email) == false) {
        fail_txt = "Вы ввели свой email НЕ правильно!";
        fail = true;
    }
    else if(password != RePassword) {
        fail_txt = "Пароли НЕ совпадают!";
        fail = true;
    }
    else if(state == "") {
        fail_txt = "Укажите свой пол!";
        fail = true;
    }
    if(fail) {
        alert(fail_txt);
    }
    else {
        window.location = "https://google.com/"
    }
}

За счёт всего вышеописанного, когда мы нажимаем кнопку "Готово" с заполнеными или НЕзаполненными строками "Имя", "Пароль" и т.п., после уведомлений типа "Вы не ввели то-то и то-то..." страница НЕ ПЕРЕЗАГРУЖАЕТСЯ!!!!!!!!!!!!!!
С помощью window.location = "https://..." мы пользователя, заполнившего предварительно ВСЮ форму, с этой страницы ПЕРЕНАПРАВЛЯЕМ на указанную в кавычках как значение window.location!
P.S.: adr_pattern.test(переменная email) == false означает, что для проверки содержимого строки email мы ссылаемся на функцию "test(та самая переменная email внутри test'а)" == false, т.е. что-то не так пользователь заполнил, после нажатия на кнопку "Готово" вылезет уведомление "Вы ввели свой email НЕ правильно!".

ПыСы: АЛЬТЕРНАТИВНЫЙ способ (правда, корявый, да и регулярные выражения не заменит НИЧТО! Но Гоша Дударь решил таки продемонстрировать) проверки email вместо регулярного выражения (к примеру adr_pattern , как в нашем случае):
javascript.js:
<...>
    else if(email.split('@').length - 1 == false)
        fail_txt = "Вы ввели свой email НЕ правильно!";
<...>
переменнаяemail.split('') - .split('') нужен для того, чтобы разбить строчку либо элемент на массив по определённому какому-то символу внутри кавычек, к примеру, '@'! А ".length - 1 == false" нужен для того, чтобы убедится, если значение символа, указанного в кавычках нет, то возвращаем 0, и 0 уже будет "false" => высветится "Вы ввели свой email НЕ правильно!" из-за отсутствия "@" в строке.
/*--------------------------------------------------------------------*/
